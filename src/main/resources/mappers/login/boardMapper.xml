<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BoardMapper">

    <sql id="criteriaBoard">
        <if test="searchType != null and searchKeyword != null">
            <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                <foreach item="type" collection="typeArr">
                    <trim prefix="OR">
                        <choose>
                            <when test="type=='T'.toString()">
                                (BOARD_SUBJECT LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                            <when test="type=='C'.toString()">
                                (BOARD_CONTENT LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                            <when test="type=='W'.toString()">
                                (
                                    A.CREATE_IDX IN
                                        (
                                            SELECT IDX
                                              FROM users
                                             WHERE USER_NICKNM LIKE CONCAT('%',#{searchKeyword},'%')
                                        )
                                )
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="countByBoardIdBoard" parameterType="Criteria" resultType="int">
        SELECT COUNT(*)
          FROM (
                    SELECT A.IDX,
                           A.MASTER_IDX,
                           A.BOARD_SUBJECT,
                           A.BOARD_CONTENT,
                           A.HIT,
                           A.START_DATE,
                           A.END_DATE,
                           A.USE_YN,
                           A.CREATE_IDX,
                           A.CREATE_DATE,
                           A.UPDATE_IDX,
                           A.UPDATE_DATE
                      FROM board A
                     INNER JOIN board_master B ON A.MASTER_IDX = B.IDX
                     WHERE B.BOARD_ID = #{paramMap.boardId}
                    <include refid="criteriaBoard"/>
                ) AS CNT_TB
    </select>

    <select id="findAllByBoardIdBoard" resultType="CustomMap" parameterType="Criteria">
        SELECT ROWNUM_TB.*
          FROM (
                    SELECT @ROWNUM:=@ROWNUM+1 AS RN,
                           A.IDX,
                           A.MASTER_IDX,
                           A.BOARD_SUBJECT,
                           A.BOARD_CONTENT,
                           A.HIT,
                           A.START_DATE,
                           A.END_DATE,
                           A.USE_YN,
                           A.CREATE_IDX,
                           A.CREATE_DATE,
                           A.UPDATE_IDX,
                           A.UPDATE_DATE
                      FROM board A
                     INNER JOIN board_master B ON A.MASTER_IDX = B.IDX,
                           (SELECT @ROWNUM:=0) temp
                     WHERE B.BOARD_ID = #{paramMap.boardId}
                    <include refid="criteriaBoard"/>
                ) AS ROWNUM_TB
         ORDER BY IDX desc
         LIMIT #{pageStart},#{amount}
    </select>

    <select id="findByBoardIdBoardMaster" parameterType="string" resultType="CustomMap">
        SELECT IDX,
               BOARD_ID,
               BOARD_NM,
               BOARD_DESC,
               BOARD_TYPE,
               LIST_LEVEL,
               READ_LEVEL,
               WRITE_LEVEL,
               COMMENT_LEVEL,
               UPLOAD_LEVEL,
               EDITOR_LEVEL,
               USE_YN,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
          FROM board_master
         WHERE BOARD_ID = #{boardId}
    </select>

    <insert id="insertBoard" parameterType="Board">
        INSERT INTO board
            (
                 MASTER_IDX,
                 BOARD_SUBJECT,
                 BOARD_CONTENT,
                 HIT,
                 START_DATE,
                 END_DATE,
                 ATTACH_FILE_IDX,
                 USE_YN,
                 CREATE_IDX,
                 CREATE_DATE,
                 UPDATE_IDX,
                 UPDATE_DATE
            )
        VALUES
            (
                 #{masterIdx},
                 #{boardSubject},
                 #{boardContent},
                 0,
                 #{startDate},
                 #{endDate},
                 #{attachFileIdx},
                 'Y',
                 #{createIdx},
                 SYSDATE(),
                 NULL,
                 SYSDATE()
             )
    </insert>

    <select id="findAllByIdx" parameterType="int" resultType="Board">
        SELECT A.IDX,
               A.MASTER_IDX,
               A.BOARD_SUBJECT,
               A.BOARD_CONTENT,
               A.HIT,
               A.START_DATE,
               A.END_DATE,
               A.USE_YN,
               A.CREATE_IDX,
               A.CREATE_DATE,
               A.UPDATE_IDX,
               A.UPDATE_DATE
          FROM board A
         INNER JOIN board_master B ON A.MASTER_IDX = B.IDX
         WHERE A.IDX = #{idx}
           AND B.BOARD_ID = #{boardId}
    </select>

     <!--TODO 재귀 예시-->

    <!-- 재귀쿼리 예시 -->
    <select id="EXAMPLE" parameterType="int" resultType="map">
        WITH RECURSIVE CTE AS
                           (
                               SELECT IDX,
                                      convert(idx, char(100)) as CTE_PATH,
                                      1 LVL,
                                      PARENT_IDX,
                                      QA_CATEGORY,
                                      QA_SUBJECT,
                                      QA_STATUS,
                                      SECRET_YN,
                                      USE_YN,
                                      CREATE_IDX,
                                      CREATE_DATE,
                                      UPDATE_IDX,
                                      UPDATE_DATE
                               FROM QNA Q
                               WHERE IDX = #{idx}
                               UNION ALL
                               SELECT Q.IDX,
                                      concat(CTE.CTE_PATH, '-', Q.IDX) AS CTE_PATH,
                                      LVL + 1 LVL,
                                      Q.PARENT_IDX,
                                      Q.QA_CATEGORY,
                                      Q.QA_SUBJECT,
                                      Q.QA_STATUS,
                                      Q.SECRET_YN,
                                      Q.USE_YN,
                                      Q.CREATE_IDX,
                                      Q.CREATE_DATE,
                                      Q.UPDATE_IDX,
                                      Q.UPDATE_DATE
                               FROM QNA Q
                                        INNER JOIN CTE ON Q.PARENT_IDX = CTE.IDX
                           )
        SELECT IDX,
               PARENT_IDX,
               LVL,
               CTE_PATH,
               QA_CATEGORY,
               QA_SUBJECT,
               QA_STATUS,
               SECRET_YN,
               USE_YN,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
        FROM CTE
    </select>

    <update id="updateBoard" parameterType="Board">
        UPDATE board
           SET BOARD_SUBJECT=#{boardSubject},
               BOARD_CONTENT=#{boardContent},
               START_DATE=#{startDate},
               END_DATE= #{endDate},
               ATTACH_FILE_IDX= #{attachFileIdx},
               NOTICE_YN= #{noticeYn},
               USE_YN= #{useYn},
               UPDATE_IDX= #{updateIdx},
               UPDATE_DATE= SYSDATE()
         WHERE IDX= #{idx}
    </update>

    <delete id="deleteBoard" parameterType="map">
        DELETE FROM board
         WHERE MASTER_IDX = #{idx}
    </delete>
</mapper>