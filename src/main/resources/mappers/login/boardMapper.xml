<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BoardMapper">

    <select id="findByMasterIdxSearch" resultType="CustomMap" parameterType="Criteria">
        SELECT A.IDX,
               A.MASTER_IDX,
               A.BOARD_SUBJECT,
               A.BOARD_CONTENT,
               A.HIT,
               A.START_DATE,
               A.END_DATE,
               A.USE_YN,
               A.CREATE_IDX,
               A.CREATE_DATE,
               A.UPDATE_IDX,
               A.UPDATE_DATE,
               B.USE_YN AS MASTER_USE_YN
          FROM board A
         INNER JOIN board_master B ON A.MASTER_IDX = B.IDX
         WHERE B.BOARD_ID = #{boardId}
            <!--
            <if test="criteria != null">
                #{searchType}
                #{keyword}
            </if>
            -->
    </select>

    <insert id="insertBoard" parameterType="Board">
        INSERT INTO board
            (
                 MASTER_IDX,
                 BOARD_SUBJECT,
                 BOARD_CONTENT,
                 HIT,
                 START_DATE,
                 END_DATE,
                 ATTACH_FILE_IDX,
                 USE_YN,
                 CREATE_IDX,
                 CREATE_DATE,
                 UPDATE_IDX,
                 UPDATE_DATE
            )
        VALUES
            (
                 #{masterIdx},
                 #{boardSubject},
                 #{boardContent},
                 0,
                 #{startDate},
                 #{endDate},
                 #{attachFileIdx},
                 'Y',
                 #{createIdx},
                 SYSDATE(),
                 NULL,
                 SYSDATE()
             )
    </insert>

    <select id="findAllByIdx" parameterType="int" resultType="Board">
        SELECT A.IDX,
               A.MASTER_IDX,
               A.BOARD_SUBJECT,
               A.BOARD_CONTENT,
               A.HIT,
               A.START_DATE,
               A.END_DATE,
               A.USE_YN,
               A.CREATE_IDX,
               A.CREATE_DATE,
               A.UPDATE_IDX,
               A.UPDATE_DATE
          FROM board A
         INNER JOIN board_master B ON A.MASTER_IDX = B.IDX
         WHERE A.IDX = #{idx}
           AND B.BOARD_ID = #{boardId}
    </select>

     <!--TODO 재귀 예시-->

    <!-- 재귀쿼리 예시 -->
    <select id="EXAMPLE" parameterType="int" resultType="map">
        WITH RECURSIVE CTE AS
                           (
                               SELECT IDX,
                                      convert(idx, char(100)) as CTE_PATH,
                                      1 LVL,
                                      PARENT_IDX,
                                      QA_CATEGORY,
                                      QA_SUBJECT,
                                      QA_STATUS,
                                      SECRET_YN,
                                      USE_YN,
                                      CREATE_IDX,
                                      CREATE_DATE,
                                      UPDATE_IDX,
                                      UPDATE_DATE
                               FROM QNA Q
                               WHERE IDX = #{idx}
                               UNION ALL
                               SELECT Q.IDX,
                                      concat(CTE.CTE_PATH, '-', Q.IDX) AS CTE_PATH,
                                      LVL + 1 LVL,
                                      Q.PARENT_IDX,
                                      Q.QA_CATEGORY,
                                      Q.QA_SUBJECT,
                                      Q.QA_STATUS,
                                      Q.SECRET_YN,
                                      Q.USE_YN,
                                      Q.CREATE_IDX,
                                      Q.CREATE_DATE,
                                      Q.UPDATE_IDX,
                                      Q.UPDATE_DATE
                               FROM QNA Q
                                        INNER JOIN CTE ON Q.PARENT_IDX = CTE.IDX
                           )
        SELECT IDX,
               PARENT_IDX,
               LVL,
               CTE_PATH,
               QA_CATEGORY,
               QA_SUBJECT,
               QA_STATUS,
               SECRET_YN,
               USE_YN,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
        FROM CTE
    </select>
</mapper>