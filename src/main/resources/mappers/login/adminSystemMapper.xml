<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.AdminSystemMapper">

    <sql id="criteriaCodeGroup">
        <if test="searchType != null and searchKeyword != null">
            <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                <foreach item="type" collection="typeArr">
                    <trim prefix="OR">
                        <choose>
                            <when test="type=='T'.toString()">
                                (CODE_GROUP_NM LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                            <when test="type=='I'.toString()">
                                (CODE_GROUP_ID LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="findAllCodeGroup" resultType="CustomMap" parameterType="Criteria">
        SELECT A.IDX,
               A.CODE_GROUP_ID,
               A.CODE_GROUP_NM,
               IFNULL(B.USER_NICKNM,'탈퇴된 관리자')AS CREATE_NICKNM,
               A.CREATE_IDX,
               A.CREATE_DATE,
               IF(A.UPDATE_IDX IS NULL , NULL, IFNULL(C.USER_NICKNM,'탈퇴된 관리자')) AS UPDATE_NICKNM,
               A.UPDATE_IDX,
               A.UPDATE_DATE
          FROM code_group A
          LEFT JOIN users B ON A.CREATE_IDX = B.IDX
          LEFT JOIN users C ON A.UPDATE_IDX = C.IDX
         WHERE 1 = 1
        <include refid="criteriaCodeGroup"/>
         ORDER BY A.CODE_GROUP_ID
    </select>

    <select id="findByIdxCodeGroup" resultType="CodeGroup" parameterType="int">
        SELECT IDX,
               CODE_GROUP_ID,
               CODE_GROUP_NM,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
          FROM code_group
         WHERE IDX = #{idx}
    </select>

    <select id="findAllByCodeGroupIdCode" parameterType="String" resultType="Code">
        SELECT IDX,
               CODE_GROUP_ID,
               CODE,
               CODE_NM,
               SORT_ORDR,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
          FROM code
         WHERE CODE_GROUP_ID = #{codeGroupId}
    </select>

    <insert id="insertCodeGroup" parameterType="map">
        INSERT INTO code_group
            (
                CODE_GROUP_ID,
                CODE_GROUP_NM,
                CREATE_IDX,
                CREATE_DATE
            )
        VALUES
            (
                #{codeGroupId},
                #{codeGroupNm},
                #{userIdx},
                SYSDATE()
            )
    </insert>

    <insert id="insertCode" parameterType="map">
        INSERT INTO code
            (
                CODE_GROUP_ID,
                CODE,
                CODE_NM,
                SORT_ORDR,
                CREATE_IDX,
                CREATE_DATE
            )
        VALUES
            <foreach item="item" index="index" collection="codeList" separator=",">
            (
                #{codeGroupId},
                #{item.code},
                #{item.codeNm},
                #{item.sortOrdr},
                #{userIdx},
                SYSDATE()
            )
            </foreach>
    </insert>

    <update id="updateCodeGroup" parameterType="map">
        UPDATE code_group
           SET
        <if test="codeGroupId != null and !codeGroupId.equals('')">
               CODE_GROUP_ID = #{codeGroupId},
        </if>
               CODE_GROUP_NM = #{codeGroupNm},
               UPDATE_IDX = #{userIdx},
               UPDATE_DATE = SYSDATE()
         WHERE IDX = #{idx}
    </update>

    <update id="updateCode" parameterType="map">
        INSERT INTO code
            (
                CODE_GROUP_ID,
                CODE,
                CODE_NM,
                SORT_ORDR,
                CREATE_IDX,
                CREATE_DATE
            )
        <foreach item="item" index="index" collection="codeList" separator=",">
            VALUES
                (
                    #{codeGroupId},
                    #{item.code},
                    #{item.codeNm},
                    #{item.sortOrdr},
                    #{userIdx},
                    SYSDATE()
                )
            ON DUPLICATE KEY UPDATE
            <if test="codeGroupId != null and !codeGroupId.equals('')">
               CODE_GROUP_ID = #{codeGroupId},
            </if>
            <if test="code != null and !code.equals('')">
               CODE = #{item.code},
            </if>
               CODE_NM = #{item.codeNm},
               SORT_ORDR = #{item.sortOrdr},
               UPDATE_IDX = #{userIdx},
               UPDATE_DATE = SYSDATE()
        </foreach>
    </update>

    <delete id="deleteCodeGroup" parameterType="String">
        DELETE FROM code_group
         WHERE CODE_GROUP_ID =#{codeGroupId}
    </delete>

    <delete id="deleteCodeByCodeGroupId" parameterType="String">
        DELETE FROM code
         WHERE CODE_GROUP_ID =#{codeGroupId}
    </delete>

    <delete id="deleteCode" parameterType="int">
        DELETE FROM code
         WHERE IDX =#{idx}
    </delete>

    <select id="existsCodeGroupId" parameterType="map" resultType="int">
        SELECT COUNT(*)
          FROM code_group
         WHERE CODE_GROUP_ID = #{codeGroupId}
    </select>

    <select id="findSystemConfig" resultType="CustomMap">
        SELECT QA_CATEGORY,
               RESET_PASSWORD,
               HOMEPAGE_NAME,
               MAIN_SKIN_TYPE
          FROM config
    </select>

    <update id="updateSystemConfig" parameterType="map">
        UPDATE config
           SET QA_CATEGORY  = #{qaCategory},
               RESET_PASSWORD = #{resetPassword},
               HOMEPAGE_NAME = #{homepageName},
               MAIN_SKIN_TYPE = #{mainSkinType}
    </update>

</mapper>