<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.CommonMapper">
    <select id="findLinkNameLvl1ByUseYn" resultType="MenuTree">
        SELECT IDX,
               NAME,
               LINK,
               LVL
          FROM menu_tree
         WHERE USE_YN = 'Y'
           AND LVL = 1
         ORDER BY IDX
    </select>

    <select id="findLinkNameLvl2ByUseYn" parameterType="String" resultType="MenuTree">
        SELECT NAME,
               LINK,
               LVL
          FROM menu_tree
         WHERE USE_YN = 'Y'
           AND LVL = 2
           AND PARENT_IDX = #{idx}
         ORDER BY IDX
    </select>

    <delete id="deleteWithdrawUser">
        <![CDATA[
        DELETE FROM users
        WHERE DELETE_YN = 'Y'
          AND UPDATE_DATE <= date_add(now(), interval -1 month)
        ]]>
    </delete>

    <select id="findCssContent" resultType="Css">
        SELECT IDX,
               CSS_FIRST_ID,
               CSS_SECOND_ID,
               CSS_NM,
               CSS_CODE,
               USE_YN,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
          FROM css
         WHERE USE_YN = 'Y'
         ORDER BY FIELD(CSS_FIRST_ID,'common') DESC, CSS_SECOND_ID, CREATE_DATE
    </select>

    <select id="findSystemConfig" resultType="CustomMap">
        SELECT *
          FROM config
    </select>

    <insert id="insertVisitor" parameterType="Visitor">
        INSERT INTO visitor
            (
                VISIT_IP,
                VISIT_TIME,
                <if test="visitRefer != null and visitRefer !=''">
                    VISIT_REFER,
                </if>
                VISIT_AGENT,
                VISIT_OS,
                VISIT_BROWSER
            )
        VALUES
            (
                #{visitIp},
                SYSDATE(),
                <if test="visitRefer != null and visitRefer !=''">
                    #{visitRefer},
                </if>
                #{visitAgent},
                #{visitOs},
                #{visitBrowser}
            )
    </insert>

    <select id="findPopup" resultType="Popup">
        SELECT IDX,
               POP_SUBJECT,
               WEB_ATTACH_FILE_IDX,
               MOBILE_ATTACH_FILE_IDX,
               POP_FIRST_ID,
               POP_SECOND_ID,
               START_DATE,
               END_DATE,
               USE_YN,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
          FROM popup
         WHERE USE_YN = 'Y'
         <![CDATA[
           AND START_DATE <= date_format(SYSDATE(),'%Y%m%d')
           AND END_DATE <= date_format(SYSDATE(),'%Y%m%d')
         ]]>
    </select>

    <select id="findBanner" resultType="Banner">
        SELECT IDX,
               BNR_SUBJECT,
               WEB_ATTACH_FILE_IDX,
               MOBILE_ATTACH_FILE_IDX,
               BNR_FIRST_ID,
               BNR_SECOND_ID,
               BNR_POSITION,
               START_DATE,
               END_DATE,
               USE_YN,
               CREATE_IDX,
               CREATE_DATE,
               UPDATE_IDX,
               UPDATE_DATE
          FROM banner
         WHERE USE_YN = 'Y'
         <![CDATA[
           AND START_DATE <= date_format(SYSDATE(),'%Y%m%d')
           AND END_DATE <= date_format(SYSDATE(),'%Y%m%d')
        ]]>
    </select>

    <select id="findPasswordByIdx" parameterType="map" resultType="string">
        SELECT USER_PWD
          FROM users
         WHERE IDX = #{idx}
    </select>

    <update id="updatePassword" parameterType="map">
        UPDATE users
           SET USER_PWD = #{newPwd},
               UPDATE_DATE = SYSDATE()
         WHERE IDX =#{idx}
    </update>

    <select id="existByUserNicknm" parameterType="string" resultType="int">
        SELECT EXISTS(
                       SELECT USER_NICKNM
                         FROM users
                        WHERE USER_NICKNM = #{userNicknm}
                   )
    </select>

    <select id="existByUserEmail" parameterType="string" resultType="int">
        SELECT EXISTS(
                       SELECT USER_EMAIL
                         FROM users
                        WHERE USER_EMAIL = #{userEmail}
                   )
    </select>

    <update id="updateVerificationCode" parameterType="map">
        UPDATE users
           SET VERIFICATION_CODE = #{VerificationCode},
               UPDATE_DATE = SYSDATE()
         WHERE USER_ID = #{userId}
    </update>

</mapper>