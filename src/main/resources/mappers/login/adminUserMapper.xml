<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.AdminUserMapper">

    <sql id="criteriaUser">
        <if test="searchType != null and searchKeyword != null">
            <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                <foreach item="type" collection="typeArr">
                    <trim prefix="OR">
                        <choose>
                            <when test="type=='I'.toString">
                                (A.USER_ID LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                            <when test="type=='N'.toString()">
                                (A.USER_NM LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                            <when test="type=='W'.toString()">
                                (A.USER_NICKNM LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <sql id="criteriaVisitor">
        <if test="searchType != null and searchKeyword != null">
            <trim prefix="AND (" suffix=")" prefixOverrides="OR">
                <foreach item="type" collection="typeArr">
                    <trim prefix="OR">
                        <choose>
                            <when test="type=='V'.toString">
                                (VISIT_IP LIKE CONCAT('%',#{searchKeyword},'%'))
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="findAllUser" parameterType="Criteria" resultType="CustomMap">
        SELECT ROWNUM_TB.*
          FROM (
                    SELECT @ROWNUM:=@ROWNUM+1 AS RN,
                           A.IDX,
                           A.USER_ID,
                           A.USER_PWD,
                           A.USER_NM,
                           A.USER_NICKNM,
                           A.USER_EMAIL,
                           A.USER_PHONE,
                           A.ROLE_TYPE,
                           A.VERIFICATION_CODE,
                           A.VERIFICATION_YN,
                           A.MARKETING_YN,
                           A.DELETE_YN,
                           A.CREATE_DATE,
                           A.UPDATE_DATE,
                           B.USER_NICKNM AS UPDATE_NICKNM
                      FROM users A
                      LEFT OUTER JOIN users B on A.UPDATE_IDX = B.IDX,
                           (SELECT @ROWNUM:=0) temp
                     WHERE 1=1
                       AND A.ROLE_TYPE IN ("ROLE_USER")
                    <include refid="criteriaUser"/>
                ) AS ROWNUM_TB
        ORDER BY IDX desc
        LIMIT #{pageStart},#{amount}
    </select>

    <select id="countUser" parameterType="Criteria" resultType="int">
        SELECT COUNT(*)
          FROM (
                    SELECT A.IDX,
                           A.USER_ID,
                           A.USER_PWD,
                           A.USER_NM,
                           A.USER_NICKNM,
                           A.USER_EMAIL,
                           A.USER_PHONE,
                           A.ROLE_TYPE,
                           A.VERIFICATION_CODE,
                           A.VERIFICATION_YN,
                           A.DELETE_YN,
                           A.CREATE_DATE,
                           A.UPDATE_DATE
                      FROM users AS A
                     WHERE 1=1
                       AND ROLE_TYPE IN ("ROLE_USER")
                    <include refid="criteriaUser"/>
                ) AS CNT_TB
    </select>

    <select id="findByIdxUser" resultType="Users" parameterType="map">
        SELECT IDX,
               USER_ID,
               USER_PWD,
               USER_NM,
               USER_NICKNM,
               USER_EMAIL,
               USER_PHONE,
               ROLE_TYPE,
               ADMIN_MEMO,
               VERIFICATION_CODE,
               VERIFICATION_YN,
               MARKETING_YN,
               DELETE_YN,
               CREATE_DATE,
               UPDATE_DATE
          FROM users
         WHERE IDX = #{idx}
    </select>

    <update id="updateUser" parameterType="map">
        UPDATE users
           SET USER_NM = #{userNm},
               USER_NICKNM = #{userNicknm},
               USER_EMAIL = #{userEmail},
               USER_PHONE = #{userPhone},
               ADMIN_MEMO = #{adminMemo},
               VERIFICATION_YN = #{verificationYn},
               UPDATE_IDX = #{userIdx},
               UPDATE_DATE = SYSDATE()
         WHERE IDX = #{idx}
    </update>

    <delete id="forceDeleteUser" parameterType="map">
        DELETE FROM users
         WHERE IDX = #{idx}
           AND ROLE_TYPE IN
        <foreach collection="roleType" item="roleType" open="(" close=")" separator=",">
            #{roleType}
        </foreach>
    </delete>

    <update id="resetPassword" parameterType="map">
        UPDATE users
           SET USER_PWD = #{userPwd}
         WHERE IDX = #{idx}
    </update>

    <select id="findAllAdmin" parameterType="Criteria" resultType="CustomMap">
        SELECT ROWNUM_TB.*
          FROM (
                    SELECT @ROWNUM:=@ROWNUM+1 as RN,
                           A.IDX,
                           A.USER_ID,
                           A.USER_PWD,
                           A.USER_NM,
                           A.USER_NICKNM,
                           A.USER_EMAIL,
                           A.USER_PHONE,
                           A.ROLE_TYPE,
                           A.VERIFICATION_CODE,
                           A.VERIFICATION_YN,
                           A.MARKETING_YN,
                           A.DELETE_YN,
                           A.CREATE_DATE,
                           A.UPDATE_DATE,
                           B.USER_NICKNM AS UPDATE_NICKNM
                      FROM users A
                      LEFT OUTER JOIN users B on A.UPDATE_IDX = B.IDX,
                           (SELECT @ROWNUM:=0) temp
                     WHERE 1=1
                       AND A.ROLE_TYPE IN ("ROLE_MANAGER")
                    <include refid="criteriaUser"/>
                ) AS ROWNUM_TB
        ORDER BY IDX DESC
        LIMIT #{pageStart},#{amount}
    </select>

    <select id="countAdmin" parameterType="Criteria" resultType="int">
        SELECT COUNT(*)
          FROM (
                    SELECT A.IDX,
                           A.USER_ID,
                           A.USER_PWD,
                           A.USER_NM,
                           A.USER_NICKNM,
                           A.USER_EMAIL,
                           A.USER_PHONE,
                           A.ROLE_TYPE,
                           A.VERIFICATION_CODE,
                           A.VERIFICATION_YN,
                           A.DELETE_YN,
                           A.CREATE_DATE,
                           A.UPDATE_DATE
                      FROM users A
                     WHERE 1=1
                       AND ROLE_TYPE IN ("ROLE_MANAGER")
                     <include refid="criteriaUser"/>
                ) AS CNT_TB
    </select>

    <select id="findPasswordByIdx" parameterType="map" resultType="string">
        SELECT USER_PWD
          FROM users
         WHERE IDX = #{idx}
    </select>

    <update id="updatePassword" parameterType="map">
        UPDATE users
           SET USER_PWD = #{newPwd},
               UPDATE_DATE = SYSDATE()
         WHERE IDX =#{idx}
    </update>

    <insert id="insertAdmin" parameterType="map">
        INSERT INTO users
            (
                 USER_ID,
                 USER_PWD,
                 USER_NM,
                 USER_NICKNM,
                 USER_EMAIL,
                 USER_PHONE,
                 ADMIN_MEMO,
                 ROLE_TYPE,
                 VERIFICATION_YN,
                 MARKETING_YN,
                 DELETE_YN,
                 CREATE_DATE
            )
        VALUES
            (
                 #{userId},
                 #{userPwd},
                 #{userNm},
                 #{userNicknm},
                 #{userEmail},
                 #{userPhone},
                 #{adminMemo},
                 'ROLE_MANAGER',
                 NULL,
                 NULL,
                 'N',
                 SYSDATE()
            )
    </insert>

    <update id="updateAdmin" parameterType="map">
        UPDATE users
        SET USER_NM = #{userNm},
            USER_NICKNM = #{userNicknm},
            USER_EMAIL = #{userEmail},
            ADMIN_MEMO = #{adminMemo},
            USER_PHONE = #{userPhone},
            ADMIN_MEMO = #{adminMemo},
            UPDATE_DATE = SYSDATE()
        WHERE IDX = #{idx}
    </update>

    <select id="findAllVisitor" parameterType="Criteria" resultType="CustomMap">
        SELECT ROWNUM_TB.*
          FROM (
                    SELECT @ROWNUM:=@ROWNUM+1 as RN,
                           VISIT_ID,
                           VISIT_IP,
                           VISIT_TIME,
                           VISIT_REFER,
                           VISIT_AGENT
                      FROM visitor A,
                           (SELECT @ROWNUM:=0) temp
                     WHERE 1=1
                    <include refid="criteriaVisitor"/>
               ) AS ROWNUM_TB
         ORDER BY VISIT_ID DESC
         LIMIT #{pageStart},#{amount}
    </select>

    <select id="countVisitor" parameterType="Criteria" resultType="int">
        SELECT COUNT(*)
          FROM (
                    SELECT VISIT_ID,
                           VISIT_IP,
                           VISIT_TIME,
                           VISIT_REFER,
                           VISIT_AGENT
                      FROM visitor AS A
                     WHERE 1=1
                    <include refid="criteriaVisitor"/>
                ) AS CNT_TB
    </select>

    <select id="findByStandardGraphDay" resultType="CustomMap">
        SELECT a.re,
			   CONCAT(a.re ,' (' ,SUBSTR(_UTF8'일월화수목금토', DAYOFWEEK(a.re), 1), ')') AS dt,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m-%d') = a.re) AS total,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m-%d') = a.re AND VISIT_OS in('Windows', 'MAC', 'Etc')) AS pc,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m-%d') = a.re AND VISIT_OS not in('Windows', 'MAC', 'Etc')) AS mobile
          FROM (
                    SELECT DATE(NOW()) re
                    UNION ALL SELECT DATE_ADD(DATE(NOW()), INTERVAL -1 DAY)
                    UNION ALL SELECT DATE_ADD(DATE(NOW()), INTERVAL -2 DAY)
                    UNION ALL SELECT DATE_ADD(DATE(NOW()), INTERVAL -3 DAY)
                    UNION ALL SELECT DATE_ADD(DATE(NOW()), INTERVAL -4 DAY)
                    UNION ALL SELECT DATE_ADD(DATE(NOW()), INTERVAL -5 DAY)
                    UNION ALL SELECT DATE_ADD(DATE(NOW()), INTERVAL -6 DAY)
               ) a
         ORDER BY a.re ASC
    </select>

    <select id="findByStandardGraphMonth" resultType="CustomMap">
        SELECT a.dt ,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m') = a.dt) AS total,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m') = a.dt AND VISIT_OS in('Windows', 'MAC', 'Etc')) AS pc,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m') = a.dt AND VISIT_OS not in('Windows', 'MAC', 'Etc')) AS mobile
          FROM (
                    SELECT date_format(DATE(NOW()),'%Y-%m') as dt
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -1 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -2 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -3 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -4 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -5 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -6 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -7 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -8 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -9 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -10 MONTH ),'%Y-%m')
                    UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -11 MONTH ),'%Y-%m')
                ) a
         ORDER BY a.dt ASC
    </select>

    <select id="findByStandardGraphYear" resultType="CustomMap">
        SELECT a.dt ,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y') = a.dt) AS total,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y') = a.dt AND VISIT_OS in('Windows', 'MAC', 'Etc')) AS pc,
			   (SELECT COUNT(*) dt_total FROM visitor WHERE date_format(VISIT_TIME,'%Y') = a.dt AND VISIT_OS not in('Windows', 'MAC', 'Etc')) AS mobile
          FROM (
			        SELECT date_format(DATE(NOW()),'%Y') as dt
			        UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -1 YEAR ),'%Y')
			        UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -2 YEAR ),'%Y')
			        UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -3 YEAR ),'%Y')
			        UNION ALL SELECT date_format(DATE_ADD(DATE(NOW()), INTERVAL -4 YEAR ),'%Y')
			   ) a
         ORDER BY a.dt ASC
    </select>

    <select id="findByStandardPieDay" resultType="CustomMap">
        SELECT a.ds,
			   (SELECT COUNT(*) FROM visitor WHERE VISIT_BROWSER = a.ds AND date_format(VISIT_TIME,'%Y-%m-%d') = DATE(NOW())) AS dn
          FROM (
                    SELECT VISIT_BROWSER AS ds FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m-%d') = DATE(NOW()) GROUP BY VISIT_BROWSER
               ) a
         ORDER BY FIELD(a.ds,'Etc'),a.ds ASC
    </select>

    <select id="findByStandardPieMonth" resultType="CustomMap">
        SELECT a.ds ,
			   (SELECT COUNT(*) FROM visitor WHERE VISIT_BROWSER = a.ds AND date_format(VISIT_TIME,'%Y-%m') = date_format(NOW(),'%Y-%m')) AS dn
          FROM (
                    SELECT VISIT_BROWSER AS ds FROM visitor WHERE date_format(VISIT_TIME,'%Y-%m') = date_format(NOW(),'%Y-%m') GROUP BY VISIT_BROWSER
               ) a
         ORDER BY FIELD(a.ds,'Etc'),a.ds ASC
    </select>

    <select id="findByStandardPieYear" resultType="CustomMap">
        SELECT a.ds,
			   (SELECT COUNT(*) FROM visitor WHERE VISIT_BROWSER = a.ds AND date_format(VISIT_TIME,'%Y') = date_format(NOW(),'%Y')) AS dn
          FROM (
			   	SELECT VISIT_BROWSER AS ds FROM visitor WHERE date_format(VISIT_TIME,'%Y') = date_format(NOW(),'%Y') GROUP BY VISIT_BROWSER
			   ) a
         ORDER BY FIELD(a.ds,'Etc'),a.ds ASC
    </select>

</mapper>